name: 'Terraform'

on:
  workflow_run:
    workflows: ['Build and Push to ECR']
    types:
      - completed

permissions:
  contents: read
  pull-requests	: write

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    # Don't run multiple terraform jobs simultaneously
    concurrency:
      group: ${{ github.ref }}-terraform  
      cancel-in-progress: false
    runs-on: ubuntu-latest
    environment: 'Terraform Environment'
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run setup jobs
      uses: ./.github/actions/terraform-setup
      with:
        aws_region: "us-east-1"
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Plan
      run: |
        cd terraform 
        terraform plan -input=false -out=tfplan 

    - name: Save Output to JSON
      run: |
        cd terraform
        terraform show -json tfplan | jq -R 'fromjson? | select(.)' > tfplan.json

    - name: Upload Terraform Plan
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: terraform/tfplan.json

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: cd terraform && terraform apply -auto-approve -input=false tfplan
    
    # Comment on the PR with a link to the Terraform Plan artifact
    - name: Comment on Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: `Terraform plan uploaded: [terraform-plan](${{ steps.upload-artifact.outputs.artifact-url }})`
          })
            
  terraform-destroy:
    name: 'Terraform Destroy'
    # Don't run multiple terraform jobs simultaneously
    concurrency:
      group: ${{ github.ref }}-terraform
      cancel-in-progress: false
    runs-on: ubuntu-latest
    environment: 'Terraform Environment'
    needs: terraform-apply
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run setup jobs
      uses: ./.github/actions/terraform-setup
      with:
        aws_region: "us-east-1"
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    - name: Empty S3 Buckets
      run: |
        cd terraform
        aws s3 rm s3://learn-ecs-logging-bucket --recursive

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
